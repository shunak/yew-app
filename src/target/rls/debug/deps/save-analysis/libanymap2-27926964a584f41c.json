{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0","program":"/Users/syu/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","anymap2","--edition=2018","/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=27926964a584f41c","-C","extra-filename=-27926964a584f41c","--out-dir","/Users/syu/yew-app/src/target/rls/debug/deps","-L","dependency=/Users/syu/yew-app/src/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/syu/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/syu/yew-app/src/target/rls/debug/deps/libanymap2-27926964a584f41c.rmeta"},"prelude":{"crate_id":{"name":"anymap2","disambiguator":[8798366637795988932,0]},"crate_root":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src","external_crates":[{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}}],"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":0,"byte_end":16772,"line_start":1,"line_end":511,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":0,"byte_end":16772,"line_start":1,"line_end":511,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":66},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":466},{"krate":0,"index":476},{"krate":0,"index":235},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":274},{"krate":0,"index":284},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":305}],"decl_id":null,"docs":" This crate provides the `AnyMap` type, a safe and convenient store for one\n value of each type.\n","sig":null,"attributes":[{"value":"/ This crate provides the `AnyMap` type, a safe and convenient store for one","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ value of each type.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":79,"byte_end":102,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, unused_results)","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":104,"byte_end":142,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"allow(unused_doc_comments)","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":143,"byte_end":173,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"any","qualname":"::any","value":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427}],"decl_id":null,"docs":" The different types of `Any` for use in a map.","sig":null,"attributes":[{"value":"/ The different types of `Any` for use in a map.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":16774,"byte_end":16824,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":16825,"byte_end":16828,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is based on `std::any`, but goes a little further, with `CloneAny`","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":16829,"byte_end":16904,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ being a cloneable `Any`. `CloneAnySend`, `CloneAnySync`, and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":16905,"byte_end":16969,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/ `CloneAnySendSync` further retrict what can be placed in the map with the","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":16970,"byte_end":17047,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ `Send` and `Sync` bounds.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17048,"byte_end":17077,"line_start":6,"line_end":6,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17141,"byte_end":17151,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"CloneToAny","qualname":"::any::CloneToAny","value":"CloneToAny","parent":null,"children":[{"krate":0,"index":34}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17217,"byte_end":17229,"line_start":13,"line_end":13,"column_start":8,"column_end":20},"name":"clone_to_any","qualname":"::any::CloneToAny::clone_to_any","value":"pub fn clone_to_any(&Self) -> Box<dyn CloneAny>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Clone `self` into a new `Box<CloneAny>` object.\n","sig":null,"attributes":[{"value":"/ Clone `self` into a new `Box<CloneAny>` object.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17158,"byte_end":17209,"line_start":12,"line_end":12,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17431,"byte_end":17445,"line_start":24,"line_end":24,"column_start":11,"column_end":25},"name":"CloneToAnySend","qualname":"::any::CloneToAnySend","value":"CloneToAnySend: Send","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17528,"byte_end":17545,"line_start":26,"line_end":26,"column_start":8,"column_end":25},"name":"clone_to_any_send","qualname":"::any::CloneToAnySend::clone_to_any_send","value":"pub fn clone_to_any_send(&Self) -> Box<dyn CloneAnySend + Send>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Clone `self` into a new `Box<CloneAnySend + Send>` object.\n","sig":null,"attributes":[{"value":"/ Clone `self` into a new `Box<CloneAnySend + Send>` object.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17458,"byte_end":17520,"line_start":25,"line_end":25,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17785,"byte_end":17799,"line_start":37,"line_end":37,"column_start":11,"column_end":25},"name":"CloneToAnySync","qualname":"::any::CloneToAnySync","value":"CloneToAnySync: Sync","parent":null,"children":[{"krate":0,"index":44}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17882,"byte_end":17899,"line_start":39,"line_end":39,"column_start":8,"column_end":25},"name":"clone_to_any_sync","qualname":"::any::CloneToAnySync::clone_to_any_sync","value":"pub fn clone_to_any_sync(&Self) -> Box<dyn CloneAnySync + Sync>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Clone `self` into a new `Box<CloneAnySync + Sync>` object.\n","sig":null,"attributes":[{"value":"/ Clone `self` into a new `Box<CloneAnySync + Sync>` object.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17812,"byte_end":17874,"line_start":38,"line_end":38,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18139,"byte_end":18157,"line_start":50,"line_end":50,"column_start":11,"column_end":29},"name":"CloneToAnySendSync","qualname":"::any::CloneToAnySendSync","value":"CloneToAnySendSync: Send + Sync","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18258,"byte_end":18280,"line_start":52,"line_end":52,"column_start":8,"column_end":30},"name":"clone_to_any_send_sync","qualname":"::any::CloneToAnySendSync::clone_to_any_send_sync","value":"pub fn clone_to_any_send_sync(&Self)\n-> Box<dyn CloneAnySendSync + Send + Sync>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Clone `self` into a new `Box<CloneAnySendSync + Send + Sync>` object.\n","sig":null,"attributes":[{"value":"/ Clone `self` into a new `Box<CloneAnySendSync + Send + Sync>` object.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18177,"byte_end":18250,"line_start":51,"line_end":51,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":21825,"byte_end":21840,"line_start":146,"line_end":146,"column_start":11,"column_end":26},"name":"UncheckedAnyExt","qualname":"::any::UncheckedAnyExt","value":"UncheckedAnyExt: Any","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, clippy :: missing_safety_doc)","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":21764,"byte_end":21814,"line_start":145,"line_end":145,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":21862,"byte_end":21884,"line_start":147,"line_end":147,"column_start":15,"column_end":37},"name":"downcast_ref_unchecked","qualname":"::any::UncheckedAnyExt::downcast_ref_unchecked","value":"pub unsafe fn downcast_ref_unchecked<T: Any>(&Self) -> &T","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":21921,"byte_end":21943,"line_start":148,"line_end":148,"column_start":15,"column_end":37},"name":"downcast_mut_unchecked","qualname":"::any::UncheckedAnyExt::downcast_mut_unchecked","value":"pub unsafe fn downcast_mut_unchecked<T: Any>(&mut Self) -> &mut T","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":21988,"byte_end":22006,"line_start":149,"line_end":149,"column_start":15,"column_end":33},"name":"downcast_unchecked","qualname":"::any::UncheckedAnyExt::downcast_unchecked","value":"pub unsafe fn downcast_unchecked<T: Any>(Box<Self>) -> Box<T>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":22142,"byte_end":22149,"line_start":154,"line_end":154,"column_start":11,"column_end":18},"name":"IntoBox","qualname":"::any::IntoBox","value":"IntoBox<A: ?Sized + UncheckedAnyExt>: Any","parent":null,"children":[{"krate":0,"index":64}],"decl_id":null,"docs":" A trait for the conversion of an object into a boxed trait object.\n","sig":null,"attributes":[{"value":"/ A trait for the conversion of an object into a boxed trait object.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":22061,"byte_end":22131,"line_start":153,"line_end":153,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":22247,"byte_end":22255,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"into_box","qualname":"::any::IntoBox::into_box","value":"pub fn into_box(Self) -> Box<A>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Convert self into the appropriate boxed form.\n","sig":null,"attributes":[{"value":"/ Convert self into the appropriate boxed form.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":22190,"byte_end":22239,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::raw","value":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":105},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":108},{"krate":0,"index":439},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":456},{"krate":0,"index":111},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":181},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":212},{"krate":0,"index":218},{"krate":0,"index":226}],"decl_id":null,"docs":" The raw form of a `Map`, allowing untyped access.","sig":null,"attributes":[{"value":"/ The raw form of a `Map`, allowing untyped access.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":23926,"byte_end":23979,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":23980,"byte_end":23983,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ All relevant details are in the `RawMap` struct.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":23984,"byte_end":24036,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":433},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26088,"byte_end":26094,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"RawMap","qualname":"::raw::RawMap","value":"RawMap {  }","parent":null,"children":[{"krate":0,"index":435}],"decl_id":null,"docs":" The raw, underlying form of a `Map`.","sig":null,"attributes":[{"value":"/ The raw, underlying form of a `Map`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25547,"byte_end":25587,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25588,"byte_end":25591,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ At its essence, this is a wrapper around `HashMap<TypeId, Box<Any>>`, with","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25592,"byte_end":25670,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ the portions that would be memory-unsafe removed or marked unsafe. Normal","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25671,"byte_end":25748,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ people are expected to use the safe `Map` interface instead, but there is","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25749,"byte_end":25826,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the occasional use for this such as iteration over the contents of an `Map`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25827,"byte_end":25907,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ However, because you will then be dealing with `Any` trait objects, it","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25908,"byte_end":25982,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ doesn’t tend to be so very useful. Still, if you need it, it’s here.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":25983,"byte_end":26059,"line_start":68,"line_end":68,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26767,"byte_end":26771,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"Iter","qualname":"::raw::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":455}],"decl_id":null,"docs":" `RawMap` iterator.\n","sig":null,"attributes":[{"value":"/ `RawMap` iterator.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26716,"byte_end":26738,"line_start":94,"line_end":94,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27348,"byte_end":27355,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::raw::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" `RawMap` mutable iterator.\n","sig":null,"attributes":[{"value":"/ `RawMap` mutable iterator.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27306,"byte_end":27336,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27950,"byte_end":27958,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::raw::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":139}],"decl_id":null,"docs":" `RawMap` move iterator.\n","sig":null,"attributes":[{"value":"/ `RawMap` move iterator.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27911,"byte_end":27938,"line_start":143,"line_end":143,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28520,"byte_end":28525,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"Drain","qualname":"::raw::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":152}],"decl_id":null,"docs":" `RawMap` drain iterator.\n","sig":null,"attributes":[{"value":"/ `RawMap` drain iterator.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28480,"byte_end":28508,"line_start":167,"line_end":167,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29243,"byte_end":29247,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawMap<A>>::iter","value":"pub fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all entries in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all entries in arbitrary order.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29112,"byte_end":29168,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29173,"byte_end":29176,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&Any`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29181,"byte_end":29217,"line_start":194,"line_end":194,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29222,"byte_end":29231,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29477,"byte_end":29485,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<RawMap<A>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all entries in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all entries in arbitrary order.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29342,"byte_end":29398,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29403,"byte_end":29406,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&mut Any`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29411,"byte_end":29451,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29456,"byte_end":29465,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29782,"byte_end":29787,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"drain","qualname":"<RawMap<A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all items as an iterator.","sig":null,"attributes":[{"value":"/ Clears the map, returning all items as an iterator.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29594,"byte_end":29649,"line_start":212,"line_end":212,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29654,"byte_end":29657,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Box<Any>`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29662,"byte_end":29702,"line_start":214,"line_end":214,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29707,"byte_end":29710,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29715,"byte_end":29756,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29761,"byte_end":29770,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30005,"byte_end":30010,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"entry","qualname":"<RawMap<A>>::entry","value":"pub fn entry(&mut Self, TypeId) -> Entry<, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets the entry for the given type in the collection for in-place\n manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the entry for the given type in the collection for in-place","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29889,"byte_end":29957,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/ manipulation.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29962,"byte_end":29979,"line_start":225,"line_end":225,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29984,"byte_end":29993,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30526,"byte_end":30529,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"get","qualname":"<RawMap<A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&A> where TypeId: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30280,"byte_end":30342,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30347,"byte_end":30350,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30355,"byte_end":30429,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form *must* match those for the key type.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30434,"byte_end":30500,"line_start":237,"line_end":237,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30505,"byte_end":30514,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30936,"byte_end":30948,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<RawMap<A>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where TypeId: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30685,"byte_end":30752,"line_start":247,"line_end":247,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30757,"byte_end":30760,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30765,"byte_end":30839,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form *must* match those for the key type.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30844,"byte_end":30910,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":30915,"byte_end":30924,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31347,"byte_end":31354,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawMap<A>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut A> where\nTypeId: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31093,"byte_end":31163,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31168,"byte_end":31171,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31176,"byte_end":31250,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form *must* match those for the key type.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31255,"byte_end":31321,"line_start":263,"line_end":263,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31326,"byte_end":31335,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31927,"byte_end":31933,"line_start":283,"line_end":283,"column_start":19,"column_end":25},"name":"insert","qualname":"<RawMap<A>>::insert","value":"pub unsafe fn insert(&mut Self, TypeId, Box<A>) -> Option<Box<A>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair from the map. If the key already had a value\n present in the map, that value is returned. Otherwise, None is\n returned.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair from the map. If the key already had a value","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31526,"byte_end":31599,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ present in the map, that value is returned. Otherwise, None is","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31604,"byte_end":31670,"line_start":274,"line_end":274,"column_start":5,"column_end":71}},{"value":"/ returned.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31675,"byte_end":31688,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31693,"byte_end":31696,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31701,"byte_end":31713,"line_start":277,"line_end":277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31718,"byte_end":31721,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ It is the caller’s responsibility to ensure that the key corresponds","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31726,"byte_end":31800,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ with the type ID of the value. If they do not, memory safety may be","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31805,"byte_end":31876,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/ violated.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31881,"byte_end":31894,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":31899,"byte_end":31908,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32334,"byte_end":32340,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawMap<A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Box<A>> where\nTypeId: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32042,"byte_end":32115,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32120,"byte_end":32150,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32155,"byte_end":32158,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32163,"byte_end":32237,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form *must* match those for the key type.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32242,"byte_end":32308,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32313,"byte_end":32322,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33313,"byte_end":33326,"line_start":339,"line_end":339,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":198}],"decl_id":null,"docs":" A view into a single occupied location in a `RawMap`.\n","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a `RawMap`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33244,"byte_end":33301,"line_start":338,"line_end":338,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33487,"byte_end":33498,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::raw::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":" A view into a single empty location in a `RawMap`.\n","sig":null,"attributes":[{"value":"/ A view into a single empty location in a `RawMap`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33421,"byte_end":33475,"line_start":343,"line_end":343,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":206},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33757,"byte_end":33765,"line_start":352,"line_end":352,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::raw::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[{"value":"/ An occupied Entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33731,"byte_end":33752,"line_start":351,"line_end":351,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":209},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33816,"byte_end":33822,"line_start":354,"line_end":354,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::raw::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[{"value":"/ A vacant Entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33793,"byte_end":33811,"line_start":353,"line_end":353,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":203},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33686,"byte_end":33691,"line_start":350,"line_end":350,"column_start":10,"column_end":15},"name":"Entry","qualname":"::raw::Entry","value":"pub enum Entry<'a, A: ?Sized + UncheckedAnyExt> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":209}],"decl_id":null,"docs":" A view into a single location in a `RawMap`, which may be vacant or\n occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a `RawMap`, which may be vacant or","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33591,"byte_end":33662,"line_start":348,"line_end":348,"column_start":1,"column_end":72}},{"value":"/ occupied.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33663,"byte_end":33676,"line_start":349,"line_end":349,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34291,"byte_end":34300,"line_start":367,"line_end":367,"column_start":19,"column_end":28},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub unsafe fn or_insert(Self, Box<A>) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33904,"byte_end":33978,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33983,"byte_end":34041,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34046,"byte_end":34049,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34054,"byte_end":34066,"line_start":361,"line_end":361,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34071,"byte_end":34074,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ It is the caller’s responsibility to ensure that the key of the entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34079,"byte_end":34154,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ corresponds with the type ID of `value`. If they do not, memory","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34159,"byte_end":34226,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/ safety may be violated.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34231,"byte_end":34258,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34263,"byte_end":34272,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34914,"byte_end":34928,"line_start":384,"line_end":384,"column_start":19,"column_end":33},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub unsafe fn or_insert_with<F: FnOnce() -> Box<A>>(Self, F) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in\n the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34496,"byte_end":34570,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34575,"byte_end":34645,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34650,"byte_end":34664,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34669,"byte_end":34672,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34677,"byte_end":34689,"line_start":378,"line_end":378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34694,"byte_end":34697,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ It is the caller’s responsibility to ensure that the key of the entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34702,"byte_end":34777,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ corresponds with the type ID of `value`. If they do not, memory","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34782,"byte_end":34849,"line_start":381,"line_end":381,"column_start":5,"column_end":72}},{"value":"/ safety may be violated.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34854,"byte_end":34881,"line_start":382,"line_end":382,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":34886,"byte_end":34895,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35280,"byte_end":35283,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35207,"byte_end":35254,"line_start":393,"line_end":393,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35259,"byte_end":35268,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35419,"byte_end":35426,"line_start":401,"line_end":401,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut A","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35338,"byte_end":35393,"line_start":399,"line_end":399,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35398,"byte_end":35407,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35660,"byte_end":35668,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the\n entry with a lifetime bound to the collection itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35497,"byte_end":35572,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ entry with a lifetime bound to the collection itself.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35577,"byte_end":35634,"line_start":406,"line_end":406,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35639,"byte_end":35648,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36055,"byte_end":36061,"line_start":420,"line_end":420,"column_start":19,"column_end":25},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub unsafe fn insert(&mut Self, Box<A>) -> Box<A>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35738,"byte_end":35805,"line_start":412,"line_end":412,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35810,"byte_end":35813,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35818,"byte_end":35830,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35835,"byte_end":35838,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ It is the caller’s responsibility to ensure that the key of the entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35843,"byte_end":35918,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ corresponds with the type ID of `value`. If they do not, memory","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35923,"byte_end":35990,"line_start":417,"line_end":417,"column_start":5,"column_end":72}},{"value":"/ safety may be violated.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35995,"byte_end":36022,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36027,"byte_end":36036,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36223,"byte_end":36229,"line_start":426,"line_end":426,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> Box<A>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36144,"byte_end":36197,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36202,"byte_end":36211,"line_start":425,"line_end":425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36703,"byte_end":36709,"line_start":441,"line_end":441,"column_start":19,"column_end":25},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub unsafe fn insert(Self, Box<A>) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36348,"byte_end":36407,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36412,"byte_end":36453,"line_start":433,"line_end":433,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36458,"byte_end":36461,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36466,"byte_end":36478,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36483,"byte_end":36486,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ It is the caller’s responsibility to ensure that the key of the entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36491,"byte_end":36566,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ corresponds with the type ID of `value`. If they do not, memory","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36571,"byte_end":36638,"line_start":438,"line_end":438,"column_start":5,"column_end":72}},{"value":"/ safety may be violated.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36643,"byte_end":36670,"line_start":439,"line_end":439,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36675,"byte_end":36684,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":460},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4118,"byte_end":4121,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":462}],"decl_id":null,"docs":" A collection containing zero or one values for any given type and allowing\n convenient, type-safe access to those values.","sig":null,"attributes":[{"value":"/ A collection containing zero or one values for any given type and allowing","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":2874,"byte_end":2952,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ convenient, type-safe access to those values.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":2953,"byte_end":3002,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3003,"byte_end":3006,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The type parameter `A` allows you to use a different value type; normally","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3007,"byte_end":3084,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ you will want it to be `anymap::any::Any`, but there are other choices:","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3085,"byte_end":3160,"line_start":99,"line_end":99,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3161,"byte_end":3164,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ - If you want the entire map to be cloneable, use `CloneAny` instead of","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3165,"byte_end":3240,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/   `Any`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3241,"byte_end":3253,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/ - You can add on `+ Send` and/or `+ Sync` (e.g. `Map<Any + Send>`) to add","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3254,"byte_end":3331,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/   those bounds.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3332,"byte_end":3351,"line_start":104,"line_end":104,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3352,"byte_end":3355,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3356,"byte_end":3367,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # use anymap2::AnyMap;","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3368,"byte_end":3394,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/ let mut data = AnyMap::new();","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3395,"byte_end":3428,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(data.get(), None::<&i32>);","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3429,"byte_end":3470,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ data.insert(42i32);","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3471,"byte_end":3494,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(data.get(), Some(&42i32));","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3495,"byte_end":3536,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ data.remove::<i32>();","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3537,"byte_end":3562,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(data.get::<i32>(), None);","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3563,"byte_end":3603,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3604,"byte_end":3607,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, PartialEq, Debug)]","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3608,"byte_end":3646,"line_start":115,"line_end":115,"column_start":1,"column_end":39}},{"value":"/ struct Foo {","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3647,"byte_end":3663,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/     str: String,","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3664,"byte_end":3684,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3685,"byte_end":3690,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3691,"byte_end":3694,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data.get::<Foo>(), None);","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3695,"byte_end":3735,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/ data.insert(Foo {","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3736,"byte_end":3757,"line_start":121,"line_end":121,"column_start":1,"column_end":22}},{"value":"/     str: format!(\"foo\"),","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3758,"byte_end":3786,"line_start":122,"line_end":122,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3787,"byte_end":3794,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3795,"byte_end":3810,"line_start":124,"line_end":124,"column_start":1,"column_end":16}},{"value":"/     data.get(),","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3811,"byte_end":3830,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/     Some(&Foo {","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3831,"byte_end":3850,"line_start":126,"line_end":126,"column_start":1,"column_end":20}},{"value":"/         str: format!(\"foo\")","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3851,"byte_end":3882,"line_start":127,"line_end":127,"column_start":1,"column_end":32}},{"value":"/     })","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3883,"byte_end":3893,"line_start":128,"line_end":128,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3894,"byte_end":3900,"line_start":129,"line_end":129,"column_start":1,"column_end":7}},{"value":"/ data.get_mut::<Foo>().map(|foo| foo.str.push('t'));","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3901,"byte_end":3956,"line_start":130,"line_end":130,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(&*data.get::<Foo>().unwrap().str, \"foot\");","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":3957,"byte_end":4014,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4015,"byte_end":4022,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4023,"byte_end":4026,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Values containing non-static references are not permitted.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4027,"byte_end":4089,"line_start":134,"line_end":134,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4793,"byte_end":4799,"line_start":160,"line_end":160,"column_start":10,"column_end":16},"name":"AnyMap","qualname":"::AnyMap","value":"Map<dyn Any>","parent":null,"children":[],"decl_id":null,"docs":" The most common type of `Map`: just using `Any`.","sig":null,"attributes":[{"value":"/ The most common type of `Map`: just using `Any`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4478,"byte_end":4530,"line_start":154,"line_end":154,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4531,"byte_end":4534,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Why is this a separate type alias rather than a default value for `Map<A>`?","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4535,"byte_end":4614,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"/ `Map::new()` doesn’t seem to be happy to infer that it should go with the","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4615,"byte_end":4694,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ default value. It’s a bit sad, really. Ah well, I guess this approach will","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4695,"byte_end":4775,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ do.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4776,"byte_end":4783,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":234},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4843,"byte_end":4857,"line_start":163,"line_end":163,"column_start":10,"column_end":24},"name":"SendSyncAnyMap","qualname":"::SendSyncAnyMap","value":"Map<dyn Any + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" Sync version\n","sig":null,"attributes":[{"value":"/ Sync version","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4817,"byte_end":4833,"line_start":162,"line_end":162,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5201,"byte_end":5204,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<A>>::get","value":"pub fn get<T: IntoBox<A>>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value stored in the collection for the type\n `T`, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value stored in the collection for the type","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5074,"byte_end":5148,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ `T`, if it exists.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5153,"byte_end":5175,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5180,"byte_end":5189,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5512,"byte_end":5519,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<A>>::get_mut","value":"pub fn get_mut<T: IntoBox<A>>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value stored in the collection for\n the type `T`, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value stored in the collection for","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5377,"byte_end":5450,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the type `T`, if it exists.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5455,"byte_end":5486,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5491,"byte_end":5500,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5913,"byte_end":5919,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map<A>>::insert","value":"pub fn insert<T: IntoBox<A>>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value stored in the collection for the type `T`.\n If the collection already had a value of type `T`, that value is\n returned. Otherwise, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Sets the value stored in the collection for the type `T`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5704,"byte_end":5765,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/ If the collection already had a value of type `T`, that value is","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5770,"byte_end":5838,"line_start":191,"line_end":191,"column_start":5,"column_end":73}},{"value":"/ returned. Otherwise, `None` is returned.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5843,"byte_end":5887,"line_start":192,"line_end":192,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5892,"byte_end":5901,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6288,"byte_end":6294,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map<A>>::remove","value":"pub fn remove<T: IntoBox<A>>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `T` value from the collection,\n returning it if there was one or `None` if there was not.\n","sig":null,"attributes":[{"value":"/ Removes the `T` value from the collection,","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6150,"byte_end":6196,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ returning it if there was one or `None` if there was not.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6201,"byte_end":6262,"line_start":203,"line_end":203,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6267,"byte_end":6276,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6560,"byte_end":6568,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"contains","qualname":"<Map<A>>::contains","value":"pub fn contains<T: IntoBox<A>>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the collection contains a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Returns true if the collection contains a value of type `T`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6470,"byte_end":6534,"line_start":211,"line_end":211,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6539,"byte_end":6548,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"entry","qualname":"<Map<A>>::entry","value":"pub fn entry<T: IntoBox<A>>(&mut Self) -> Entry<, A, T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the entry for the given type in the collection for in-place\n manipulation\n","sig":null,"attributes":[{"value":"/ Gets the entry for the given type in the collection for in-place","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6662,"byte_end":6730,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ manipulation","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6735,"byte_end":6751,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":6756,"byte_end":6765,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7687,"byte_end":7700,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"decl_id":null,"docs":" A view into a single occupied location in an `Map`.\n","sig":null,"attributes":[{"value":"/ A view into a single occupied location in an `Map`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7620,"byte_end":7675,"line_start":255,"line_end":255,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7875,"byte_end":7886,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" A view into a single empty location in an `Map`.\n","sig":null,"attributes":[{"value":"/ A view into a single empty location in an `Map`.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7811,"byte_end":7863,"line_start":261,"line_end":261,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":278},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8162,"byte_end":8170,"line_start":270,"line_end":270,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[{"value":"/ An occupied Entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8136,"byte_end":8157,"line_start":269,"line_end":269,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8224,"byte_end":8230,"line_start":272,"line_end":272,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[{"value":"/ A vacant Entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8201,"byte_end":8219,"line_start":271,"line_end":271,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":274},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8084,"byte_end":8089,"line_start":268,"line_end":268,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, A: ?Sized + UncheckedAnyExt, V: 'a> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":281}],"decl_id":null,"docs":" A view into a single location in an `Map`, which may be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in an `Map`, which may be vacant or occupied.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7995,"byte_end":8074,"line_start":267,"line_end":267,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8496,"byte_end":8505,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8333,"byte_end":8407,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8412,"byte_end":8470,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8475,"byte_end":8484,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8890,"byte_end":8904,"line_start":290,"line_end":290,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in\n the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8696,"byte_end":8770,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8775,"byte_end":8845,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8850,"byte_end":8864,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8869,"byte_end":8878,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9714,"byte_end":9724,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9198,"byte_end":9274,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9279,"byte_end":9341,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9346,"byte_end":9349,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9354,"byte_end":9368,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9373,"byte_end":9376,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9381,"byte_end":9388,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ # use anymap2::AnyMap;","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9393,"byte_end":9419,"line_start":305,"line_end":305,"column_start":5,"column_end":31}},{"value":"/ let mut data = AnyMap::new();","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9424,"byte_end":9457,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9462,"byte_end":9467,"line_start":307,"line_end":307,"column_start":5,"column_end":10}},{"value":"/     let r = data.entry::<i32>().or_default();","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9472,"byte_end":9521,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(r, &mut 0);","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9526,"byte_end":9556,"line_start":309,"line_end":309,"column_start":5,"column_end":35}},{"value":"/     *r = 1;","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9561,"byte_end":9576,"line_start":310,"line_end":310,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9581,"byte_end":9586,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(data.get(), Some(&1));","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9591,"byte_end":9628,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(data.entry::<i32>().or_default(), &mut 1);","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9633,"byte_end":9690,"line_start":313,"line_end":313,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9695,"byte_end":9702,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10067,"byte_end":10070,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9995,"byte_end":10041,"line_start":324,"line_end":324,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10046,"byte_end":10055,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10238,"byte_end":10245,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10158,"byte_end":10212,"line_start":330,"line_end":330,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10217,"byte_end":10226,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10507,"byte_end":10515,"line_start":339,"line_end":339,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the\n entry with a lifetime bound to the collection itself\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10345,"byte_end":10420,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ entry with a lifetime bound to the collection itself","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10425,"byte_end":10481,"line_start":337,"line_end":337,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10486,"byte_end":10495,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10706,"byte_end":10712,"line_start":345,"line_end":345,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10614,"byte_end":10680,"line_start":343,"line_end":343,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10685,"byte_end":10694,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10907,"byte_end":10913,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10829,"byte_end":10881,"line_start":349,"line_end":349,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":10886,"byte_end":10895,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":11209,"byte_end":11215,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":11078,"byte_end":11137,"line_start":357,"line_end":357,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":11142,"byte_end":11183,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":11188,"byte_end":11197,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17298,"byte_end":17299,"line_start":16,"line_end":16,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17636,"byte_end":17637,"line_start":29,"line_end":29,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17990,"byte_end":17991,"line_start":42,"line_end":42,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18393,"byte_end":18394,"line_start":55,"line_end":55,"column_start":59,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":24352,"byte_end":24364,"line_start":22,"line_end":22,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26353,"byte_end":26359,"line_start":76,"line_end":76,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26907,"byte_end":26911,"line_start":99,"line_end":99,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27215,"byte_end":27219,"line_start":112,"line_end":112,"column_start":61,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27494,"byte_end":27501,"line_start":123,"line_end":123,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27817,"byte_end":27824,"line_start":136,"line_end":136,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28086,"byte_end":28094,"line_start":147,"line_end":147,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28389,"byte_end":28397,"line_start":160,"line_end":160,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28662,"byte_end":28667,"line_start":171,"line_end":171,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28970,"byte_end":28975,"line_start":184,"line_end":184,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29096,"byte_end":29102,"line_start":191,"line_end":191,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32541,"byte_end":32547,"line_start":302,"line_end":302,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32794,"byte_end":32800,"line_start":315,"line_end":315,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33039,"byte_end":33045,"line_start":326,"line_end":326,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33885,"byte_end":33890,"line_start":357,"line_end":357,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35180,"byte_end":35193,"line_start":392,"line_end":392,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36323,"byte_end":36334,"line_start":431,"line_end":431,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4330,"byte_end":4333,"line_start":142,"line_end":142,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5061,"byte_end":5064,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7242,"byte_end":7245,"line_start":234,"line_end":234,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7384,"byte_end":7387,"line_start":241,"line_end":241,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7534,"byte_end":7540,"line_start":248,"line_end":248,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8311,"byte_end":8316,"line_start":275,"line_end":275,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9176,"byte_end":9181,"line_start":298,"line_end":298,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9965,"byte_end":9978,"line_start":323,"line_end":323,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":11050,"byte_end":11061,"line_start":356,"line_end":356,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":2855,"byte_end":2858,"line_start":92,"line_end":92,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":2868,"byte_end":2871,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":66}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17298,"byte_end":17299,"line_start":16,"line_end":16,"column_start":37,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17447,"byte_end":17451,"line_start":24,"line_end":24,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":38}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17636,"byte_end":17637,"line_start":29,"line_end":29,"column_start":48,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":38}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17801,"byte_end":17805,"line_start":37,"line_end":37,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":17990,"byte_end":17991,"line_start":42,"line_end":42,"column_start":48,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":46},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18159,"byte_end":18163,"line_start":50,"line_end":50,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18166,"byte_end":18170,"line_start":50,"line_end":50,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":18393,"byte_end":18394,"line_start":55,"line_end":55,"column_start":59,"column_end":60},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":51},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":21842,"byte_end":21845,"line_start":146,"line_end":146,"column_start":28,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":310},"to":{"krate":0,"index":55}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/any.rs","byte_start":22180,"byte_end":22183,"line_start":154,"line_end":154,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":310},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":24352,"byte_end":24364,"line_start":22,"line_end":22,"column_start":17,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":9772}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26353,"byte_end":26359,"line_start":76,"line_end":76,"column_start":45,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":26907,"byte_end":26911,"line_start":99,"line_end":99,"column_start":52,"column_end":56},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27215,"byte_end":27219,"line_start":112,"line_end":112,"column_start":61,"column_end":65},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27494,"byte_end":27501,"line_start":123,"line_end":123,"column_start":52,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":27817,"byte_end":27824,"line_start":136,"line_end":136,"column_start":61,"column_end":68},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28086,"byte_end":28094,"line_start":147,"line_end":147,"column_start":48,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28389,"byte_end":28397,"line_start":160,"line_end":160,"column_start":57,"column_end":65},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28662,"byte_end":28667,"line_start":171,"line_end":171,"column_start":52,"column_end":57},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":28970,"byte_end":28975,"line_start":184,"line_end":184,"column_start":61,"column_end":66},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":29096,"byte_end":29102,"line_start":191,"line_end":191,"column_start":35,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32541,"byte_end":32547,"line_start":302,"line_end":302,"column_start":51,"column_end":57},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":32794,"byte_end":32800,"line_start":315,"line_end":315,"column_start":54,"column_end":60},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33039,"byte_end":33045,"line_start":326,"line_end":326,"column_start":52,"column_end":58},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":33885,"byte_end":33890,"line_start":357,"line_end":357,"column_start":39,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":35180,"byte_end":35193,"line_start":392,"line_end":392,"column_start":39,"column_end":52},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/raw.rs","byte_start":36323,"byte_end":36334,"line_start":431,"line_end":431,"column_start":39,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":4330,"byte_end":4333,"line_start":142,"line_end":142,"column_start":45,"column_end":48},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":460},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":5061,"byte_end":5064,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7242,"byte_end":7245,"line_start":234,"line_end":234,"column_start":56,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":460},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7384,"byte_end":7387,"line_start":241,"line_end":241,"column_start":56,"column_end":59},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":460},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":7534,"byte_end":7540,"line_start":248,"line_end":248,"column_start":52,"column_end":58},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":8311,"byte_end":8316,"line_start":275,"line_end":275,"column_start":54,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9176,"byte_end":9181,"line_start":298,"line_end":298,"column_start":64,"column_end":69},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":9965,"byte_end":9978,"line_start":323,"line_end":323,"column_start":54,"column_end":67},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/syu/.cargo/registry/src/github.com-1ecc6299db9ec823/anymap2-0.13.0/src/lib.rs","byte_start":11050,"byte_end":11061,"line_start":356,"line_end":356,"column_start":54,"column_end":65},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}}]}